<case id="test.case" name="test" guid="_HxtPK">
    <caseFileModel>
        <caseFileItem id="_HxtPK_2" name="Patient" multiplicity="ExactlyOne" definitionRef="patient.cfid"/>
    </caseFileModel>
    <casePlanModel id="cm__HxtPK_0" name="test" autoComplete="true">
        <planItem id="pi_ht__HxtPK_0" name="HumanTask_0" definitionRef="ht__HxtPK_0"/>
        <planItem id="pi_ue__HxtPK_1" name="UserEvent_1" definitionRef="ue__HxtPK_1"/>
        <sentry id="crit__HxtPK_0" name="Sentry_0">
            <planItemOnPart id="_HxtPK_4" name="PlanItemOnPart_0" sourceRef="pi_ue__HxtPK_1">
                <standardEvent>occur</standardEvent>
            </planItemOnPart>
        </sentry>
        <exitCriterion id="_HxtPK_3" name="ExitCriterion_0" sentryRef="crit__HxtPK_0"/>
        <humanTask id="ht__HxtPK_0" name="HumanTask_0" isBlocking="true">
            <inputs id="_HxtPK_7" name="Patient" bindingRef="_HxtPK_2"/>
            <outputs id="_HxtPK_10" name="Patient" bindingRef="_HxtPK_2"/>
            <extensionElements mustUnderstand="false">
                <batav:implementation xmlns:batav="io.batav">
                    <parameterMapping id="_HxtPK_9" name="ParameterMapping_2" sourceRef="_HxtPK_7" targetRef="_dJRM_Patient"/>
                    <parameterMapping id="_HxtPK_11" name="ParameterMapping_3" sourceRef="_eEbG_Patient" targetRef="_HxtPK_10"/>
                </batav:implementation>
            </extensionElements>
        </humanTask>
        <userEvent id="ue__HxtPK_1" name="UserEvent_1"/>
    </casePlanModel>
    <extensionElements mustUnderstand="false">
        <batav:start-case-model xmlns:batav="io.batav">{
	"schema": {
	}
}</batav:start-case-model>
    </extensionElements>
</case>